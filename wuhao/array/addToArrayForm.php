<?php

/**
 *
 * 执行用时: 92 ms
内存消耗: 16.3 MB

 *
 * 989. 数组形式的整数加法
 *
 * 对于非负整数 X 而言，X 的数组形式是每位数字按从左到右的顺序形成的数组。例如，如果 X = 1231，那么其数组形式为 [1,2,3,1]。

给定非负整数 X 的数组形式 A，返回整数 X+K 的数组形式。

 

示例 1：

输入：A = [1,2,0,0], K = 34
输出：[1,2,3,4]
解释：1200 + 34 = 1234
示例 2：

输入：A = [2,7,4], K = 181
输出：[4,5,5]
解释：274 + 181 = 455
示例 3：

输入：A = [2,1,5], K = 806
输出：[1,0,2,1]
解释：215 + 806 = 1021
示例 4：

输入：A = [9,9,9,9,9,9,9,9,9,9], K = 1
输出：[1,0,0,0,0,0,0,0,0,0,0]
解释：9999999999 + 1 = 10000000000
 

提示：

1 <= A.length <= 10000
0 <= A[i] <= 9
0 <= K <= 10000
如果 A.length > 1，那么 A[0] != 0

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/add-to-array-form-of-integer
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 * Class Solution
 */
class Solution {

    /**
     * @param Integer[] $A
     * @param Integer $K
     * @return Integer[]
     */
    function addToArrayForm($A, $K) {
        $len = count($A) -1;//计算数组长度
        //循环数组，从最后一位相加
        for ($i = $len; $i >= 0; $i--) {
            $A[$i] = $A[$i]+$K;//当前位数
            $K = intval($A[$i] / 10); //进位值
            $A[$i] = $A[$i] % 10;//对当前值取模
            if ($K == 0) {//如当前不存在进位值，则直接返回
                return $A;
            }
        }
        //首位还存在进位值
        if ($K > 0) {
            //多位数插入逐个数组
            for ($i=strlen($K)-1; $i >=0  ; $i--) {
                array_unshift($A,substr($K,$i,1));
            }
        }
        return $A;
    }
}
